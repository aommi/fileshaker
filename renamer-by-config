import os
from pathlib import Path
import gspread
from oauth2client.service_account import ServiceAccountCredentials
from config import CONFIG  # Import CONFIG from config.py

# Step 1: Define the scope and authenticate
scope = ['https://www.googleapis.com/auth/drive']
base_dir = CONFIG["base_dir"]
asset_dir = base_dir / CONFIG["asset_dirs"]["renamer"]
credentials_path = base_dir / CONFIG["credentials"]["reader"]

credentials = ServiceAccountCredentials.from_json_keyfile_name(str(credentials_path), scope)
client = gspread.authorize(credentials)

# Step 2: Open the Renamer Sheet by URL
renamer_sheet_url = CONFIG["spreadsheets_list"]["renamer_input"]["url"]
renamer_input_sheet_id = CONFIG["spreadsheets_list"]["renamer_input"]["input_sheet_id"]
print(f"Renamer sheet URL: {renamer_sheet_url}")
print(f"Input sheet ID: {renamer_input_sheet_id}")

renamer_sheet = client.open_by_url(renamer_sheet_url).get_worksheet_by_id(renamer_input_sheet_id)

# Step 3: Read data from the Renamer Sheet
data = renamer_sheet.get_all_records()
print(data)
"""
# Step 4: Prepare file paths
source_folder_path = asset_dir

# Step 5: Rename files based on the sheet
for row in data:
    old_suffix = row['old-suffix']  # Replace 'Column 1' with actual column name
    new_suffix = row['new-suffix']  # Replace 'Column 2' with actual column name

    # Skip processing if old_suffix is blank
    if not old_suffix:
        print("Skipping row with blank old suffix value.")
        continue

    # Search for files containing the old_suffix in their name
    for filename in os.listdir(source_folder_path):
        file_path = source_folder_path / filename
        if old_suffix in filename and file_path.is_file():
            # Replace old_suffix with new_suffix in the filename
            new_filename = filename.replace(old_suffix, new_suffix)
            new_file_path = source_folder_path / new_filename
            os.rename(file_path, new_file_path)
            print(f"Renamed: {filename} -> {new_filename}")
"""